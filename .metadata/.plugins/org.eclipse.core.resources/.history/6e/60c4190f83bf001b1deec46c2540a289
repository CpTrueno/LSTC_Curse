/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include "CORTEXM_TYPES.h"

#include "SYSTEM.h"

//#include <STDINT.H>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

/* ****************************************************************************
 * DEFINICIONES Y CONSTANTES
 *************************************************************************** */
void SYSTEM_Ini(void);
void LED_Set(uint32_t stat);
uint32_t SISTEM_SetTimer(uint32_t timer, uint32_t time);
uint32_t SISTEM_GetTimer(uint32_t timer);
uint32_t SYSTEM_GetTiempoON();

uint32_t SWITCH_Get_BTN_0();
uint32_t SWITCH_Get_BTN_1();
uint32_t SWITCH_Get_BeforeState_1();
uint32_t SWITCH_Get_AutoRepeat_1();
uint32_t SWITCH_Get_AutoRepeat_2();
uint32_t SWITCH_GetStatus(uint32_t btn);
uint32_t SWITCH_GetBefore(uint32_t btn);

void BTN_Controls();
void BTN_Diming();


/* ***************************************************************************
 * VARIABLES
 ************************************************************************** */
static uint32_t state_0;
static uint32_t state_1;
static uint32_t state_2;

static uint32_t flag = 1;

/* ****************************************************************************
 * APLICACIÃ“N
 *************************************************************************** */

int main(void)
{
	SYSTEM_Ini();		// HW Init

	LED_Set(0x00000000);		/* Estado del LED */

    /* Loop forever */
	while(1){

		BTN_Diming();
		//BTN_Controls();
	}
}

void BTN_Diming(){

	static uint32_t time_1;

	state_0 = SWITCH_GetStatus(0);
	state_1 = SWITCH_GetStatus(1);

	if(state_0 != 0){
		if (state_0 & SWITCH_BIT_EDGEOFF){
			if((flag != 0)){
				SISTEM_SetTimer(1,3000);
				flag = 0;
			}
		}
	}

	time_1 = SISTEM_GetTimer(1);

	if(time_1 != 0){
		LED_Set(0xFFFFFFFF);
	}
	else{
		LED_Set(0x00000000);
		flag = 1;
	}
}

void BTN_Controls(){

	state_0 = SWITCH_GetStatus(0) & SWITCH_BIT_ACTUALSTAT;
	state_1 = SWITCH_GetStatus(1) & SWITCH_BIT_ACTUALSTAT;

	if((state_0 != 0) && (state_1 != 0)){
		LED_Set(0x00FF00FF);
	}
	else if(state_1 != 0){
		LED_Set(0x55555555);
	}
	else if(state_0 != 0){
		LED_Set(0xFFFFFFFF);
	}
	else
		LED_Set(0x00000000);
}

