/*
 * SYSTEM.c
 *
 *  Created on: Apr 27, 2021
 *      Author: j.cespedes
 */

// ==========================================================================
// ==========================================================================
// ========  ORGANIZADO: SYSTEM.c ===========================================
// ==========================================================================
// ==========================================================================

/* ***************************************************************************
 * SYSTEM.c. SISTEMA Y ABSTRACCIÓN DEL HARDWARE
 * ===========================================================================
 ************************************************************************** */

/**
 * @file	SYSTEM.c
 * @brief	SISTEMA Y ABSTRACCIÓN DEL HARDWARE
 * @ author	JRG
 * @date 	Apr 25, 2021
 *
 * # HARDWARE
 *
 * # RECURSOS
 *
 */

/* ***************************************************************************
 * DECLARACIONES
 ************************************************************************** */

#include "CORTEXM_TYPES.h"
#include "STM32F042_REGS_.h"
#include "SYSTEM.h"
//#include "STM32F042_VECT_.h"


/* ***************************************************************************
 * DEFINICIONES Y CONSTANTES
 ************************************************************************** */

#define	CLOCK	(8000000)		/* Velocidadn del reloj en Hercios */
#define RITHM 	(1000)		    /* Ritmo de interrupción de sistema */

/* ***************************************************************************
 * VARIABLES
 ************************************************************************** */

static uint32_t ImageLED;

/* ############################################################################
 * ############################################################################
 * ########        SISTEMA        #############################################
 * ############################################################################
 * ######################################################################### */

/* ****************************************************************************
 * INICIALIZACIONES HARDWARE
 * ----------------------------------------------------------------------------
 * ************************************************************************* */

void BTN_Ini(){

}

void SYSTEM_Ini()
{
	/* --- INICIALIZACIONES: PUERTOS --------------------------------------- */

	*RCC_AHBENR |= 0x007E0000;  /* ENABLE ALL PORTS (COMMON) */

	// INIT LED --
    *GPIOB_MODER &= ~0x000000C0;	/* "~ Invierto Bits" Reinicio PB3 a 00 (bits 6=0 y 7=0) ... */
    *GPIOB_MODER |=  0x00000040;	/* Asignamos a PB3 la función de salida (bits 6=1 y 7=0)*/
    // INIT BTN --
	*GPIOB_MODER &= ~0x0000000C;      /* "~ Invierto Bits" Reinicio PB1 a 00 (bits 2=0 y 3=0) ...*/
	*GPIOB_MODER |= 0x00000000;       /* Asignamos a PB1 la función de entrada (bits 2=0 y 3=0)*/

    /* ---- INICIALIZACIONES: TEMPORIZADOR DE SISTEMA ---------------------- */

    *STK_RVR = (CLOCK/RITHM) - 1;         /* Top value */
    *STK_RVR = (CLOCK/RITHM) - 1;         /* Top value */

    *STK_CSR = 0x0005;              /* Enable & select processor clock */
    *STK_CSR |= 0x0002;            /* Enable interrupt request */

    *SHPR3 &= ~0x33000000;         /* Low priority (high value) */
    *SHPR3 |=  0xCC000000;         /* Low priority (high value) */
}

/* ****************************************************************************
 * INTERRUPCIÓN PERIÓDICA
 * ----------------------------------------------------------------------------
 * ************************************************************************* */

void SysTick_Handler()
{
static uint32_t phase;

    /* --- EXTRACCIÓN DE MÁSCARA ----------------------------------------- */

    uint32_t mask = 1 << ((phase/125) % 32);

    /* --- APLICACIÓN DEL ESTADO ACTUAL AL LED --------------------------- */

    if ((mask & ImageLED) == 0)
    {
		*GPIOB_ODR &= ~0x00000008;		/* PB3 a nivel bajo */

    }
    else
    {
		*GPIOB_ODR |= 0x00000008;		/* PB3 a nivel bajo */
    }

    /* --- INCREMENTO DE FASE -------------------------------------------- */

    ++phase;
}

/* ##########################################################################
 * ##########################################################################
 * ########        APLICACIÓN        ########################################
 * ##########################################################################
 * ####################################################################### */

/* ****************************************************************************
 * FIJAR EL ESTADO DEL LED
 * ----------------------------------------------------------------------------
 * ************************************************************************* */


uint32_t LED_Set(uint32_t stat)
{
	ImageLED = stat;
	return(stat);
}
