
Blink_Led_Interrupts_03.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000034c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800040c  08000414  00010414  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800040c  0800040c  00010414  2**0
                  CONTENTS
  4 .ARM          00000000  0800040c  0800040c  00010414  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800040c  08000414  00010414  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800040c  0800040c  0001040c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000410  08000410  00010410  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010414  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  20000000  08000414  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  08000414  00020024  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010414  2**0
                  CONTENTS, READONLY
 12 .debug_info   000001ce  00000000  00000000  0001043c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000121  00000000  00000000  0001060a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000088  00000000  00000000  00010730  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000060  00000000  00000000  000107b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001989  00000000  00000000  00010818  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000236  00000000  00000000  000121a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009b25  00000000  00000000  000123d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001befc  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000011c  00000000  00000000  0001bf50  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080003f4 	.word	0x080003f4

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	080003f4 	.word	0x080003f4

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	; 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f806 	bl	800021c <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			; (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__aeabi_idiv0>:
 800021c:	4770      	bx	lr
 800021e:	46c0      	nop			; (mov r8, r8)

08000220 <SYSTEM_Ini>:
void BTN_Ini(){

}

void SYSTEM_Ini()
{
 8000220:	b580      	push	{r7, lr}
 8000222:	af00      	add	r7, sp, #0
	/* --- INICIALIZACIONES: PUERTOS --------------------------------------- */

	*RCC_AHBENR |= 0x007E0000;  /* ENABLE ALL PORTS (COMMON) */
 8000224:	4b1c      	ldr	r3, [pc, #112]	; (8000298 <SYSTEM_Ini+0x78>)
 8000226:	681a      	ldr	r2, [r3, #0]
 8000228:	4b1b      	ldr	r3, [pc, #108]	; (8000298 <SYSTEM_Ini+0x78>)
 800022a:	21fc      	movs	r1, #252	; 0xfc
 800022c:	03c9      	lsls	r1, r1, #15
 800022e:	430a      	orrs	r2, r1
 8000230:	601a      	str	r2, [r3, #0]

	// INIT LED --
    *GPIOB_MODER &= ~0x000000C0;	/* "~ Invierto Bits" Reinicio PB3 a 00 (bits 6=0 y 7=0) ... */
 8000232:	4b1a      	ldr	r3, [pc, #104]	; (800029c <SYSTEM_Ini+0x7c>)
 8000234:	681a      	ldr	r2, [r3, #0]
 8000236:	4b19      	ldr	r3, [pc, #100]	; (800029c <SYSTEM_Ini+0x7c>)
 8000238:	21c0      	movs	r1, #192	; 0xc0
 800023a:	438a      	bics	r2, r1
 800023c:	601a      	str	r2, [r3, #0]
    *GPIOB_MODER |=  0x00000040;	/* Asignamos a PB3 la función de salida (bits 6=1 y 7=0)*/
 800023e:	4b17      	ldr	r3, [pc, #92]	; (800029c <SYSTEM_Ini+0x7c>)
 8000240:	681a      	ldr	r2, [r3, #0]
 8000242:	4b16      	ldr	r3, [pc, #88]	; (800029c <SYSTEM_Ini+0x7c>)
 8000244:	2140      	movs	r1, #64	; 0x40
 8000246:	430a      	orrs	r2, r1
 8000248:	601a      	str	r2, [r3, #0]

    // INIT BTN --
	*GPIOB_MODER &= ~0x0000000C;      /* "~ Invierto Bits" Reinicio PB1 a 00 (bits 2=0 y 3=0) ...*/
 800024a:	4b14      	ldr	r3, [pc, #80]	; (800029c <SYSTEM_Ini+0x7c>)
 800024c:	681a      	ldr	r2, [r3, #0]
 800024e:	4b13      	ldr	r3, [pc, #76]	; (800029c <SYSTEM_Ini+0x7c>)
 8000250:	210c      	movs	r1, #12
 8000252:	438a      	bics	r2, r1
 8000254:	601a      	str	r2, [r3, #0]
	*GPIOB_MODER |= 0x00000000;       /* Asignamos a PB1 la función de entrada (bits 2=0 y 3=0)*/
 8000256:	4a11      	ldr	r2, [pc, #68]	; (800029c <SYSTEM_Ini+0x7c>)
 8000258:	4b10      	ldr	r3, [pc, #64]	; (800029c <SYSTEM_Ini+0x7c>)
 800025a:	6812      	ldr	r2, [r2, #0]
 800025c:	601a      	str	r2, [r3, #0]

    /* ---- INICIALIZACIONES: TEMPORIZADOR DE SISTEMA ---------------------- */

    *STK_RVR = (CLOCK/RITHM) - 1;         /* Top value */
 800025e:	4b10      	ldr	r3, [pc, #64]	; (80002a0 <SYSTEM_Ini+0x80>)
 8000260:	4a10      	ldr	r2, [pc, #64]	; (80002a4 <SYSTEM_Ini+0x84>)
 8000262:	601a      	str	r2, [r3, #0]
   // *STK_RVR = (CLOCK/RITHM) - 1;         /* Top value */

    *STK_CSR = 0x0005;              /* Enable & select processor clock */
 8000264:	4b10      	ldr	r3, [pc, #64]	; (80002a8 <SYSTEM_Ini+0x88>)
 8000266:	2205      	movs	r2, #5
 8000268:	601a      	str	r2, [r3, #0]
    *STK_CSR |= 0x0002;            /* Enable interrupt request */
 800026a:	4b0f      	ldr	r3, [pc, #60]	; (80002a8 <SYSTEM_Ini+0x88>)
 800026c:	681a      	ldr	r2, [r3, #0]
 800026e:	4b0e      	ldr	r3, [pc, #56]	; (80002a8 <SYSTEM_Ini+0x88>)
 8000270:	2102      	movs	r1, #2
 8000272:	430a      	orrs	r2, r1
 8000274:	601a      	str	r2, [r3, #0]

    *SHPR3 &= ~0x33000000;         /* Low priority (high value) */
 8000276:	4b0d      	ldr	r3, [pc, #52]	; (80002ac <SYSTEM_Ini+0x8c>)
 8000278:	681a      	ldr	r2, [r3, #0]
 800027a:	4b0c      	ldr	r3, [pc, #48]	; (80002ac <SYSTEM_Ini+0x8c>)
 800027c:	490c      	ldr	r1, [pc, #48]	; (80002b0 <SYSTEM_Ini+0x90>)
 800027e:	400a      	ands	r2, r1
 8000280:	601a      	str	r2, [r3, #0]
    *SHPR3 |=  0xCC000000;         /* Low priority (high value) */
 8000282:	4b0a      	ldr	r3, [pc, #40]	; (80002ac <SYSTEM_Ini+0x8c>)
 8000284:	681a      	ldr	r2, [r3, #0]
 8000286:	4b09      	ldr	r3, [pc, #36]	; (80002ac <SYSTEM_Ini+0x8c>)
 8000288:	21cc      	movs	r1, #204	; 0xcc
 800028a:	0609      	lsls	r1, r1, #24
 800028c:	430a      	orrs	r2, r1
 800028e:	601a      	str	r2, [r3, #0]
}
 8000290:	46c0      	nop			; (mov r8, r8)
 8000292:	46bd      	mov	sp, r7
 8000294:	bd80      	pop	{r7, pc}
 8000296:	46c0      	nop			; (mov r8, r8)
 8000298:	40021014 	.word	0x40021014
 800029c:	48000400 	.word	0x48000400
 80002a0:	e000e014 	.word	0xe000e014
 80002a4:	00001f3f 	.word	0x00001f3f
 80002a8:	e000e010 	.word	0xe000e010
 80002ac:	e000ed20 	.word	0xe000ed20
 80002b0:	ccffffff 	.word	0xccffffff

080002b4 <TIM2_IRQHandler>:

/* ****************************************************************************
 * INTERRUPCIÓN PERIÓDICA
 * ----------------------------------------------------------------------------
 * ************************************************************************* */
void TIM2_IRQHandler(){
 80002b4:	b580      	push	{r7, lr}
 80002b6:	af00      	add	r7, sp, #0

}
 80002b8:	46c0      	nop			; (mov r8, r8)
 80002ba:	46bd      	mov	sp, r7
 80002bc:	bd80      	pop	{r7, pc}
	...

080002c0 <SysTick_Handler>:


void SysTick_Handler()
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	b082      	sub	sp, #8
 80002c4:	af00      	add	r7, sp, #0
static uint32_t phase;

    /* --- EXTRACCIÓN DE MÁSCARA ----------------------------------------- */

    uint32_t mask = 1 << ((phase/125) % 32);
 80002c6:	4b14      	ldr	r3, [pc, #80]	; (8000318 <SysTick_Handler+0x58>)
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	217d      	movs	r1, #125	; 0x7d
 80002cc:	0018      	movs	r0, r3
 80002ce:	f7ff ff1b 	bl	8000108 <__udivsi3>
 80002d2:	0003      	movs	r3, r0
 80002d4:	001a      	movs	r2, r3
 80002d6:	231f      	movs	r3, #31
 80002d8:	4013      	ands	r3, r2
 80002da:	2201      	movs	r2, #1
 80002dc:	409a      	lsls	r2, r3
 80002de:	0013      	movs	r3, r2
 80002e0:	607b      	str	r3, [r7, #4]

    /* --- APLICACIÓN DEL ESTADO ACTUAL AL LED --------------------------- */

    if ((mask & ImageLED) == 0)
 80002e2:	4b0e      	ldr	r3, [pc, #56]	; (800031c <SysTick_Handler+0x5c>)
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	687a      	ldr	r2, [r7, #4]
 80002e8:	4013      	ands	r3, r2
 80002ea:	d106      	bne.n	80002fa <SysTick_Handler+0x3a>
    {
		*GPIOB_ODR &= ~0x00000008;		/* PB3 a nivel bajo */
 80002ec:	4b0c      	ldr	r3, [pc, #48]	; (8000320 <SysTick_Handler+0x60>)
 80002ee:	681a      	ldr	r2, [r3, #0]
 80002f0:	4b0b      	ldr	r3, [pc, #44]	; (8000320 <SysTick_Handler+0x60>)
 80002f2:	2108      	movs	r1, #8
 80002f4:	438a      	bics	r2, r1
 80002f6:	601a      	str	r2, [r3, #0]
 80002f8:	e005      	b.n	8000306 <SysTick_Handler+0x46>

    }
    else
    {
		*GPIOB_ODR |= 0x00000008;		/* PB3 a nivel bajo */
 80002fa:	4b09      	ldr	r3, [pc, #36]	; (8000320 <SysTick_Handler+0x60>)
 80002fc:	681a      	ldr	r2, [r3, #0]
 80002fe:	4b08      	ldr	r3, [pc, #32]	; (8000320 <SysTick_Handler+0x60>)
 8000300:	2108      	movs	r1, #8
 8000302:	430a      	orrs	r2, r1
 8000304:	601a      	str	r2, [r3, #0]
    }

    /* --- INCREMENTO DE FASE -------------------------------------------- */

    ++phase;
 8000306:	4b04      	ldr	r3, [pc, #16]	; (8000318 <SysTick_Handler+0x58>)
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	1c5a      	adds	r2, r3, #1
 800030c:	4b02      	ldr	r3, [pc, #8]	; (8000318 <SysTick_Handler+0x58>)
 800030e:	601a      	str	r2, [r3, #0]
}
 8000310:	46c0      	nop			; (mov r8, r8)
 8000312:	46bd      	mov	sp, r7
 8000314:	b002      	add	sp, #8
 8000316:	bd80      	pop	{r7, pc}
 8000318:	20000020 	.word	0x20000020
 800031c:	2000001c 	.word	0x2000001c
 8000320:	48000414 	.word	0x48000414

08000324 <LED_Set>:
 * ----------------------------------------------------------------------------
 * ************************************************************************* */


uint32_t LED_Set(uint32_t stat)
{
 8000324:	b580      	push	{r7, lr}
 8000326:	b082      	sub	sp, #8
 8000328:	af00      	add	r7, sp, #0
 800032a:	6078      	str	r0, [r7, #4]
	ImageLED = stat;
 800032c:	4b03      	ldr	r3, [pc, #12]	; (800033c <LED_Set+0x18>)
 800032e:	687a      	ldr	r2, [r7, #4]
 8000330:	601a      	str	r2, [r3, #0]
	return(stat);
 8000332:	687b      	ldr	r3, [r7, #4]
}
 8000334:	0018      	movs	r0, r3
 8000336:	46bd      	mov	sp, r7
 8000338:	b002      	add	sp, #8
 800033a:	bd80      	pop	{r7, pc}
 800033c:	2000001c 	.word	0x2000001c

08000340 <main>:
/* ****************************************************************************
 * APLICACIÓN
 *************************************************************************** */

int main()
{
 8000340:	b580      	push	{r7, lr}
 8000342:	af00      	add	r7, sp, #0

    SYSTEM_Ini();
 8000344:	f7ff ff6c 	bl	8000220 <SYSTEM_Ini>

    /* --- ESTADO DEL LED -------------------------------------------------- */

    LED_Set(0x05D705D7);		/* Estado del LED */
 8000348:	4b02      	ldr	r3, [pc, #8]	; (8000354 <main+0x14>)
 800034a:	0018      	movs	r0, r3
 800034c:	f7ff ffea 	bl	8000324 <LED_Set>

	/* --- BUCLE PRINCIPAL ------------------------------------------------- */

    for(;;)
 8000350:	e7fe      	b.n	8000350 <main+0x10>
 8000352:	46c0      	nop			; (mov r8, r8)
 8000354:	05d705d7 	.word	0x05d705d7

08000358 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000358:	480d      	ldr	r0, [pc, #52]	; (8000390 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800035a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800035c:	e000      	b.n	8000360 <Reset_Handler+0x8>
 800035e:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000360:	480c      	ldr	r0, [pc, #48]	; (8000394 <LoopForever+0x6>)
  ldr r1, =_edata
 8000362:	490d      	ldr	r1, [pc, #52]	; (8000398 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000364:	4a0d      	ldr	r2, [pc, #52]	; (800039c <LoopForever+0xe>)
  movs r3, #0
 8000366:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000368:	e002      	b.n	8000370 <LoopCopyDataInit>

0800036a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800036a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800036c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800036e:	3304      	adds	r3, #4

08000370 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000370:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000372:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000374:	d3f9      	bcc.n	800036a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000376:	4a0a      	ldr	r2, [pc, #40]	; (80003a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000378:	4c0a      	ldr	r4, [pc, #40]	; (80003a4 <LoopForever+0x16>)
  movs r3, #0
 800037a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800037c:	e001      	b.n	8000382 <LoopFillZerobss>

0800037e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800037e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000380:	3204      	adds	r2, #4

08000382 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000382:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000384:	d3fb      	bcc.n	800037e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000386:	f000 f811 	bl	80003ac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800038a:	f7ff ffd9 	bl	8000340 <main>

0800038e <LoopForever>:

LoopForever:
    b LoopForever
 800038e:	e7fe      	b.n	800038e <LoopForever>
  ldr   r0, =_estack
 8000390:	20001800 	.word	0x20001800
  ldr r0, =_sdata
 8000394:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000398:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800039c:	08000414 	.word	0x08000414
  ldr r2, =_sbss
 80003a0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003a4:	20000024 	.word	0x20000024

080003a8 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003a8:	e7fe      	b.n	80003a8 <ADC_COMP_IRQHandler>
	...

080003ac <__libc_init_array>:
 80003ac:	b570      	push	{r4, r5, r6, lr}
 80003ae:	2600      	movs	r6, #0
 80003b0:	4d0c      	ldr	r5, [pc, #48]	; (80003e4 <__libc_init_array+0x38>)
 80003b2:	4c0d      	ldr	r4, [pc, #52]	; (80003e8 <__libc_init_array+0x3c>)
 80003b4:	1b64      	subs	r4, r4, r5
 80003b6:	10a4      	asrs	r4, r4, #2
 80003b8:	42a6      	cmp	r6, r4
 80003ba:	d109      	bne.n	80003d0 <__libc_init_array+0x24>
 80003bc:	2600      	movs	r6, #0
 80003be:	f000 f819 	bl	80003f4 <_init>
 80003c2:	4d0a      	ldr	r5, [pc, #40]	; (80003ec <__libc_init_array+0x40>)
 80003c4:	4c0a      	ldr	r4, [pc, #40]	; (80003f0 <__libc_init_array+0x44>)
 80003c6:	1b64      	subs	r4, r4, r5
 80003c8:	10a4      	asrs	r4, r4, #2
 80003ca:	42a6      	cmp	r6, r4
 80003cc:	d105      	bne.n	80003da <__libc_init_array+0x2e>
 80003ce:	bd70      	pop	{r4, r5, r6, pc}
 80003d0:	00b3      	lsls	r3, r6, #2
 80003d2:	58eb      	ldr	r3, [r5, r3]
 80003d4:	4798      	blx	r3
 80003d6:	3601      	adds	r6, #1
 80003d8:	e7ee      	b.n	80003b8 <__libc_init_array+0xc>
 80003da:	00b3      	lsls	r3, r6, #2
 80003dc:	58eb      	ldr	r3, [r5, r3]
 80003de:	4798      	blx	r3
 80003e0:	3601      	adds	r6, #1
 80003e2:	e7f2      	b.n	80003ca <__libc_init_array+0x1e>
 80003e4:	0800040c 	.word	0x0800040c
 80003e8:	0800040c 	.word	0x0800040c
 80003ec:	0800040c 	.word	0x0800040c
 80003f0:	08000410 	.word	0x08000410

080003f4 <_init>:
 80003f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003f6:	46c0      	nop			; (mov r8, r8)
 80003f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003fa:	bc08      	pop	{r3}
 80003fc:	469e      	mov	lr, r3
 80003fe:	4770      	bx	lr

08000400 <_fini>:
 8000400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000402:	46c0      	nop			; (mov r8, r8)
 8000404:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000406:	bc08      	pop	{r3}
 8000408:	469e      	mov	lr, r3
 800040a:	4770      	bx	lr
